
motorkontroll.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000812  000008a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000812  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800100  00800100  000008a6  2**0
                  ALLOC
  3 .stab         00002448  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000932  00000000  00000000  00002cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00003622  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000080  00000000  00000000  00003651  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000075d  00000000  00000000  000036d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000001e8  00000000  00000000  00003e2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000416  00000000  00000000  00004016  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000014c  00000000  00000000  0000442c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000021e  00000000  00000000  00004578  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000033f  00000000  00000000  00004796  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000070  00000000  00000000  00004ad5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	aa 31       	cpi	r26, 0x1A	; 26
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	f8 d0       	rcall	.+496    	; 0x29a <main>
  aa:	b1 c3       	rjmp	.+1890   	; 0x80e <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <drive_left_wheels>:

void turn_left(int speed)
{
	drive_left_wheels(0);
	drive_right_wheels(speed);
}
  ae:	28 2f       	mov	r18, r24
  b0:	39 2f       	mov	r19, r25
  b2:	30 93 8b 00 	sts	0x008B, r19
  b6:	20 93 8a 00 	sts	0x008A, r18
  ba:	08 95       	ret

000000bc <drive_right_wheels>:
  bc:	28 2f       	mov	r18, r24
  be:	39 2f       	mov	r19, r25
  c0:	30 93 89 00 	sts	0x0089, r19
  c4:	20 93 88 00 	sts	0x0088, r18
  c8:	08 95       	ret

000000ca <stop_wheels>:
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	ef df       	rcall	.-34     	; 0xae <drive_left_wheels>
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	f3 cf       	rjmp	.-26     	; 0xbc <drive_right_wheels>

000000d6 <wait_wheels>:

void wait_wheels(int tenth_secs)
{
	for (int i = 1; i < tenth_secs; i++)
  d6:	82 30       	cpi	r24, 0x02	; 2
  d8:	91 05       	cpc	r25, r1
  da:	84 f0       	brlt	.+32     	; 0xfc <wait_wheels+0x26>
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e0:	4f ef       	ldi	r20, 0xFF	; 255
  e2:	51 ee       	ldi	r21, 0xE1	; 225
  e4:	64 e0       	ldi	r22, 0x04	; 4
  e6:	41 50       	subi	r20, 0x01	; 1
  e8:	50 40       	sbci	r21, 0x00	; 0
  ea:	60 40       	sbci	r22, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <wait_wheels+0x10>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <wait_wheels+0x1a>
  f0:	00 00       	nop
  f2:	2f 5f       	subi	r18, 0xFF	; 255
  f4:	3f 4f       	sbci	r19, 0xFF	; 255
  f6:	28 17       	cp	r18, r24
  f8:	39 07       	cpc	r19, r25
  fa:	91 f7       	brne	.-28     	; 0xe0 <wait_wheels+0xa>
  fc:	08 95       	ret

000000fe <steering_algorithm>:
		_delay_ms(100);
	}
}

void steering_algorithm ()
{
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	cf 93       	push	r28
 108:	df 93       	push	r29

	if(prev_error < 0)
 10a:	c0 90 16 01 	lds	r12, 0x0116
 10e:	d0 90 17 01 	lds	r13, 0x0117
 112:	e0 90 18 01 	lds	r14, 0x0118
 116:	f0 90 19 01 	lds	r15, 0x0119
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	a9 01       	movw	r20, r18
 120:	c7 01       	movw	r24, r14
 122:	b6 01       	movw	r22, r12
 124:	be d1       	rcall	.+892    	; 0x4a2 <__cmpsf2>
 126:	88 23       	and	r24, r24
 128:	ec f4       	brge	.+58     	; 0x164 <steering_algorithm+0x66>
	{
		speed_right = 1300;
 12a:	c4 e1       	ldi	r28, 0x14	; 20
 12c:	d5 e0       	ldi	r29, 0x05	; 5
 12e:	d0 93 09 01 	sts	0x0109, r29
 132:	c0 93 08 01 	sts	0x0108, r28
		speed_left = 1300 - (uint8_t)control;
 136:	60 91 00 01 	lds	r22, 0x0100
 13a:	70 91 01 01 	lds	r23, 0x0101
 13e:	80 91 02 01 	lds	r24, 0x0102
 142:	90 91 03 01 	lds	r25, 0x0103
 146:	1e d2       	rcall	.+1084   	; 0x584 <__fixunssfsi>
 148:	ce 01       	movw	r24, r28
 14a:	86 1b       	sub	r24, r22
 14c:	91 09       	sbc	r25, r1
 14e:	90 93 0f 01 	sts	0x010F, r25
 152:	80 93 0e 01 	sts	0x010E, r24
		drive_left_wheels(speed_left);
 156:	ab df       	rcall	.-170    	; 0xae <drive_left_wheels>
		drive_right_wheels(speed_right);
 158:	80 91 08 01 	lds	r24, 0x0108
 15c:	90 91 09 01 	lds	r25, 0x0109
 160:	ad df       	rcall	.-166    	; 0xbc <drive_right_wheels>
 162:	35 c0       	rjmp	.+106    	; 0x1ce <steering_algorithm+0xd0>
	}
	
	else if (prev_error > 0)
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	a9 01       	movw	r20, r18
 16a:	c7 01       	movw	r24, r14
 16c:	b6 01       	movw	r22, r12
 16e:	e8 d2       	rcall	.+1488   	; 0x740 <__gesf2>
 170:	18 16       	cp	r1, r24
 172:	ec f4       	brge	.+58     	; 0x1ae <steering_algorithm+0xb0>
	{
		speed_left = 1300;
 174:	c4 e1       	ldi	r28, 0x14	; 20
 176:	d5 e0       	ldi	r29, 0x05	; 5
 178:	d0 93 0f 01 	sts	0x010F, r29
 17c:	c0 93 0e 01 	sts	0x010E, r28
		speed_right = 1300 - (uint8_t)control;
 180:	60 91 00 01 	lds	r22, 0x0100
 184:	70 91 01 01 	lds	r23, 0x0101
 188:	80 91 02 01 	lds	r24, 0x0102
 18c:	90 91 03 01 	lds	r25, 0x0103
 190:	f9 d1       	rcall	.+1010   	; 0x584 <__fixunssfsi>
 192:	ce 01       	movw	r24, r28
 194:	86 1b       	sub	r24, r22
 196:	91 09       	sbc	r25, r1
 198:	90 93 09 01 	sts	0x0109, r25
 19c:	80 93 08 01 	sts	0x0108, r24
		drive_right_wheels(speed_right);
 1a0:	8d df       	rcall	.-230    	; 0xbc <drive_right_wheels>
		drive_left_wheels(speed_left);
 1a2:	80 91 0e 01 	lds	r24, 0x010E
 1a6:	90 91 0f 01 	lds	r25, 0x010F
 1aa:	81 df       	rcall	.-254    	; 0xae <drive_left_wheels>
 1ac:	10 c0       	rjmp	.+32     	; 0x1ce <steering_algorithm+0xd0>
	}
	
	else if (prev_error == 0)
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	a9 01       	movw	r20, r18
 1b4:	c7 01       	movw	r24, r14
 1b6:	b6 01       	movw	r22, r12
 1b8:	74 d1       	rcall	.+744    	; 0x4a2 <__cmpsf2>
 1ba:	81 11       	cpse	r24, r1
 1bc:	07 c0       	rjmp	.+14     	; 0x1cc <steering_algorithm+0xce>
	{
		drive_right_wheels(1300);
 1be:	84 e1       	ldi	r24, 0x14	; 20
 1c0:	95 e0       	ldi	r25, 0x05	; 5
 1c2:	7c df       	rcall	.-264    	; 0xbc <drive_right_wheels>
		drive_left_wheels(1300);
 1c4:	84 e1       	ldi	r24, 0x14	; 20
 1c6:	95 e0       	ldi	r25, 0x05	; 5
 1c8:	72 df       	rcall	.-284    	; 0xae <drive_left_wheels>
 1ca:	01 c0       	rjmp	.+2      	; 0x1ce <steering_algorithm+0xd0>
	}
	
	else
	stop_wheels();
 1cc:	7e df       	rcall	.-260    	; 0xca <stop_wheels>
	
	
}
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	ff 90       	pop	r15
 1d4:	ef 90       	pop	r14
 1d6:	df 90       	pop	r13
 1d8:	cf 90       	pop	r12
 1da:	08 95       	ret

000001dc <pd_update>:


void pd_update(double curr_error, double dt)
{
 1dc:	4f 92       	push	r4
 1de:	5f 92       	push	r5
 1e0:	6f 92       	push	r6
 1e2:	7f 92       	push	r7
 1e4:	8f 92       	push	r8
 1e6:	9f 92       	push	r9
 1e8:	af 92       	push	r10
 1ea:	bf 92       	push	r11
 1ec:	cf 92       	push	r12
 1ee:	df 92       	push	r13
 1f0:	ef 92       	push	r14
 1f2:	ff 92       	push	r15
 1f4:	6b 01       	movw	r12, r22
 1f6:	7c 01       	movw	r14, r24
 1f8:	49 01       	movw	r8, r18
 1fa:	5a 01       	movw	r10, r20
	
	// differentiation
	diff = ((curr_error - prev_error) / dt);
	
	// scaling
	p_term = (proportional_gain * curr_error);
 1fc:	20 91 04 01 	lds	r18, 0x0104
 200:	30 91 05 01 	lds	r19, 0x0105
 204:	40 91 06 01 	lds	r20, 0x0106
 208:	50 91 07 01 	lds	r21, 0x0107
 20c:	9d d2       	rcall	.+1338   	; 0x748 <__mulsf3>
	d_term = (derivative_gain   * diff);
	
	// summation of terms
	control = abs(p_term) + d_term;
 20e:	b5 d1       	rcall	.+874    	; 0x57a <__fixsfsi>
 210:	77 23       	and	r23, r23
 212:	1c f4       	brge	.+6      	; 0x21a <pd_update+0x3e>
 214:	71 95       	neg	r23
 216:	61 95       	neg	r22
 218:	71 09       	sbc	r23, r1
 21a:	88 27       	eor	r24, r24
 21c:	77 fd       	sbrc	r23, 7
 21e:	80 95       	com	r24
 220:	98 2f       	mov	r25, r24
 222:	de d1       	rcall	.+956    	; 0x5e0 <__floatsisf>
 224:	2b 01       	movw	r4, r22
 226:	3c 01       	movw	r6, r24
	double diff;
	double p_term;
	double d_term;
	
	// differentiation
	diff = ((curr_error - prev_error) / dt);
 228:	20 91 16 01 	lds	r18, 0x0116
 22c:	30 91 17 01 	lds	r19, 0x0117
 230:	40 91 18 01 	lds	r20, 0x0118
 234:	50 91 19 01 	lds	r21, 0x0119
 238:	c7 01       	movw	r24, r14
 23a:	b6 01       	movw	r22, r12
 23c:	cd d0       	rcall	.+410    	; 0x3d8 <__subsf3>
 23e:	a5 01       	movw	r20, r10
 240:	94 01       	movw	r18, r8
 242:	33 d1       	rcall	.+614    	; 0x4aa <__divsf3>
	
	// scaling
	p_term = (proportional_gain * curr_error);
	d_term = (derivative_gain   * diff);
 244:	20 91 12 01 	lds	r18, 0x0112
 248:	30 91 13 01 	lds	r19, 0x0113
 24c:	40 91 14 01 	lds	r20, 0x0114
 250:	50 91 15 01 	lds	r21, 0x0115
 254:	79 d2       	rcall	.+1266   	; 0x748 <__mulsf3>
 256:	9b 01       	movw	r18, r22
 258:	ac 01       	movw	r20, r24
	
	// summation of terms
	control = abs(p_term) + d_term;
 25a:	c3 01       	movw	r24, r6
 25c:	b2 01       	movw	r22, r4
 25e:	bd d0       	rcall	.+378    	; 0x3da <__addsf3>
 260:	60 93 00 01 	sts	0x0100, r22
 264:	70 93 01 01 	sts	0x0101, r23
 268:	80 93 02 01 	sts	0x0102, r24
 26c:	90 93 03 01 	sts	0x0103, r25
	
	// save current error as previous error for next iteration
	prev_error = curr_error;
 270:	c0 92 16 01 	sts	0x0116, r12
 274:	d0 92 17 01 	sts	0x0117, r13
 278:	e0 92 18 01 	sts	0x0118, r14
 27c:	f0 92 19 01 	sts	0x0119, r15
}
 280:	ff 90       	pop	r15
 282:	ef 90       	pop	r14
 284:	df 90       	pop	r13
 286:	cf 90       	pop	r12
 288:	bf 90       	pop	r11
 28a:	af 90       	pop	r10
 28c:	9f 90       	pop	r9
 28e:	8f 90       	pop	r8
 290:	7f 90       	pop	r7
 292:	6f 90       	pop	r6
 294:	5f 90       	pop	r5
 296:	4f 90       	pop	r4
 298:	08 95       	ret

0000029a <main>:
{
	//OCR1A = 0x0000; // = PD5 = Rightside wheels
	//OCR1B = 0x0000; // = PD4 = Leftside wheels
	//PD0 = DIR1, PD1 = DIR2
	
	DDRD = 0b00110011;	//Set port direction
 29a:	83 e3       	ldi	r24, 0x33	; 51
 29c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00000001; // Initiate drive forward
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	8b b9       	out	0x0b, r24	; 11
	
	// set top value
	ICR1H = 0x07; //Top value high (00 with prescaler 64)  ( 0x07 with prescaler 8)
 2a2:	87 e0       	ldi	r24, 0x07	; 7
 2a4:	80 93 87 00 	sts	0x0087, r24
	ICR1L = 0xCF; // Top value low (249 or 0xF9 with prescaler 64) (1999 or 0x07CF with prescaler 8)
 2a8:	8f ec       	ldi	r24, 0xCF	; 207
 2aa:	80 93 86 00 	sts	0x0086, r24
	
	// set WGM3:0 --> choose mode 14, fast pwm
	TCCR1A |= (1<< WGM11 | 0 << WGM10);
 2ae:	a0 e8       	ldi	r26, 0x80	; 128
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	8c 91       	ld	r24, X
 2b4:	82 60       	ori	r24, 0x02	; 2
 2b6:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM13 | 1 << WGM12);
 2b8:	e1 e8       	ldi	r30, 0x81	; 129
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	80 81       	ld	r24, Z
 2be:	88 61       	ori	r24, 0x18	; 24
 2c0:	80 83       	st	Z, r24
	
	//set com1a com1b Clear OCnA/OCnB on Compare Match, set OCnA/OCnB at BOTTOM (non-inverting mode)
	TCCR1A |= (1 << COM1A1 | 0<<COM1A0 | 1<< COM1B1 | 0 << COM1B0);
 2c2:	8c 91       	ld	r24, X
 2c4:	80 6a       	ori	r24, 0xA0	; 160
 2c6:	8c 93       	st	X, r24
	
	//set prescaler 64
	//TCCR1B |= (0 << CS12 | 1 << CS11 | 1 << CS10);
	//set prescaler 8
	TCCR1B |= (0 << CS12 | 1 << CS11 | 0 << CS10);
 2c8:	80 81       	ld	r24, Z
 2ca:	82 60       	ori	r24, 0x02	; 2
 2cc:	80 83       	st	Z, r24
	

		drive_left_wheels(700);
 2ce:	8c eb       	ldi	r24, 0xBC	; 188
 2d0:	92 e0       	ldi	r25, 0x02	; 2
 2d2:	ed de       	rcall	.-550    	; 0xae <drive_left_wheels>
		drive_right_wheels(1300);
 2d4:	84 e1       	ldi	r24, 0x14	; 20
 2d6:	95 e0       	ldi	r25, 0x05	; 5
 2d8:	f1 de       	rcall	.-542    	; 0xbc <drive_right_wheels>
// 		drive_left_wheels(1999);
// 		drive_right_wheels(1999);
// 		wait_wheels(10);
// 		stop_wheels();

		wait_wheels(20);
 2da:	84 e1       	ldi	r24, 0x14	; 20
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	fb de       	rcall	.-522    	; 0xd6 <wait_wheels>
		prev_error = 0;
 2e0:	10 92 16 01 	sts	0x0116, r1
 2e4:	10 92 17 01 	sts	0x0117, r1
 2e8:	10 92 18 01 	sts	0x0118, r1
 2ec:	10 92 19 01 	sts	0x0119, r1
		proportional_gain = 10;
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	a0 e2       	ldi	r26, 0x20	; 32
 2f6:	b1 e4       	ldi	r27, 0x41	; 65
 2f8:	80 93 04 01 	sts	0x0104, r24
 2fc:	90 93 05 01 	sts	0x0105, r25
 300:	a0 93 06 01 	sts	0x0106, r26
 304:	b0 93 07 01 	sts	0x0107, r27
		derivative_gain = 6;
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	a0 ec       	ldi	r26, 0xC0	; 192
 30e:	b0 e4       	ldi	r27, 0x40	; 64
 310:	80 93 12 01 	sts	0x0112, r24
 314:	90 93 13 01 	sts	0x0113, r25
 318:	a0 93 14 01 	sts	0x0114, r26
 31c:	b0 93 15 01 	sts	0x0115, r27
		pd_update(150, 2);
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	50 e4       	ldi	r21, 0x40	; 64
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	86 e1       	ldi	r24, 0x16	; 22
 32e:	93 e4       	ldi	r25, 0x43	; 67
 330:	55 df       	rcall	.-342    	; 0x1dc <pd_update>
		steering_algorithm();
 332:	e5 de       	rcall	.-566    	; 0xfe <steering_algorithm>
		
		wait_wheels(5);
 334:	85 e0       	ldi	r24, 0x05	; 5
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	ce de       	rcall	.-612    	; 0xd6 <wait_wheels>
		pd_update(80, 0.5);
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	5f e3       	ldi	r21, 0x3F	; 63
 342:	60 e0       	ldi	r22, 0x00	; 0
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	80 ea       	ldi	r24, 0xA0	; 160
 348:	92 e4       	ldi	r25, 0x42	; 66
 34a:	48 df       	rcall	.-368    	; 0x1dc <pd_update>
		steering_algorithm();
 34c:	d8 de       	rcall	.-592    	; 0xfe <steering_algorithm>
				
		wait_wheels(5);
 34e:	85 e0       	ldi	r24, 0x05	; 5
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	c1 de       	rcall	.-638    	; 0xd6 <wait_wheels>
		pd_update(30, 0.5);
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	40 e0       	ldi	r20, 0x00	; 0
 35a:	5f e3       	ldi	r21, 0x3F	; 63
 35c:	60 e0       	ldi	r22, 0x00	; 0
 35e:	70 e0       	ldi	r23, 0x00	; 0
 360:	80 ef       	ldi	r24, 0xF0	; 240
 362:	91 e4       	ldi	r25, 0x41	; 65
 364:	3b df       	rcall	.-394    	; 0x1dc <pd_update>
		steering_algorithm();
 366:	cb de       	rcall	.-618    	; 0xfe <steering_algorithm>
		
		wait_wheels(5);
 368:	85 e0       	ldi	r24, 0x05	; 5
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	b4 de       	rcall	.-664    	; 0xd6 <wait_wheels>
		pd_update(-20, 0.5);
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	40 e0       	ldi	r20, 0x00	; 0
 374:	5f e3       	ldi	r21, 0x3F	; 63
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	70 e0       	ldi	r23, 0x00	; 0
 37a:	80 ea       	ldi	r24, 0xA0	; 160
 37c:	91 ec       	ldi	r25, 0xC1	; 193
 37e:	2e df       	rcall	.-420    	; 0x1dc <pd_update>
		steering_algorithm();
 380:	be de       	rcall	.-644    	; 0xfe <steering_algorithm>
		
		wait_wheels(5);
 382:	85 e0       	ldi	r24, 0x05	; 5
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	a7 de       	rcall	.-690    	; 0xd6 <wait_wheels>
		pd_update(10, 0.5);
 388:	20 e0       	ldi	r18, 0x00	; 0
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	40 e0       	ldi	r20, 0x00	; 0
 38e:	5f e3       	ldi	r21, 0x3F	; 63
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	70 e0       	ldi	r23, 0x00	; 0
 394:	80 e2       	ldi	r24, 0x20	; 32
 396:	91 e4       	ldi	r25, 0x41	; 65
 398:	21 df       	rcall	.-446    	; 0x1dc <pd_update>
		steering_algorithm();
 39a:	b1 de       	rcall	.-670    	; 0xfe <steering_algorithm>
				
		wait_wheels(5);
 39c:	85 e0       	ldi	r24, 0x05	; 5
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	9a de       	rcall	.-716    	; 0xd6 <wait_wheels>
		pd_update(-5, 0.5);
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	40 e0       	ldi	r20, 0x00	; 0
 3a8:	5f e3       	ldi	r21, 0x3F	; 63
 3aa:	60 e0       	ldi	r22, 0x00	; 0
 3ac:	70 e0       	ldi	r23, 0x00	; 0
 3ae:	80 ea       	ldi	r24, 0xA0	; 160
 3b0:	90 ec       	ldi	r25, 0xC0	; 192
 3b2:	14 df       	rcall	.-472    	; 0x1dc <pd_update>
		steering_algorithm();
 3b4:	a4 de       	rcall	.-696    	; 0xfe <steering_algorithm>
				
		wait_wheels(5);
 3b6:	85 e0       	ldi	r24, 0x05	; 5
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	8d de       	rcall	.-742    	; 0xd6 <wait_wheels>
		pd_update(0, 0.5);
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	40 e0       	ldi	r20, 0x00	; 0
 3c2:	5f e3       	ldi	r21, 0x3F	; 63
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	cb 01       	movw	r24, r22
 3ca:	08 df       	rcall	.-496    	; 0x1dc <pd_update>
		steering_algorithm();
 3cc:	98 de       	rcall	.-720    	; 0xfe <steering_algorithm>
		
		wait_wheels(10);
 3ce:	8a e0       	ldi	r24, 0x0A	; 10
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	81 de       	rcall	.-766    	; 0xd6 <wait_wheels>
		
		stop_wheels();
 3d4:	7a de       	rcall	.-780    	; 0xca <stop_wheels>
 3d6:	ff cf       	rjmp	.-2      	; 0x3d6 <main+0x13c>

000003d8 <__subsf3>:
 3d8:	50 58       	subi	r21, 0x80	; 128

000003da <__addsf3>:
 3da:	bb 27       	eor	r27, r27
 3dc:	aa 27       	eor	r26, r26
 3de:	0e d0       	rcall	.+28     	; 0x3fc <__addsf3x>
 3e0:	75 c1       	rjmp	.+746    	; 0x6cc <__fp_round>
 3e2:	66 d1       	rcall	.+716    	; 0x6b0 <__fp_pscA>
 3e4:	30 f0       	brcs	.+12     	; 0x3f2 <__addsf3+0x18>
 3e6:	6b d1       	rcall	.+726    	; 0x6be <__fp_pscB>
 3e8:	20 f0       	brcs	.+8      	; 0x3f2 <__addsf3+0x18>
 3ea:	31 f4       	brne	.+12     	; 0x3f8 <__addsf3+0x1e>
 3ec:	9f 3f       	cpi	r25, 0xFF	; 255
 3ee:	11 f4       	brne	.+4      	; 0x3f4 <__addsf3+0x1a>
 3f0:	1e f4       	brtc	.+6      	; 0x3f8 <__addsf3+0x1e>
 3f2:	5b c1       	rjmp	.+694    	; 0x6aa <__fp_nan>
 3f4:	0e f4       	brtc	.+2      	; 0x3f8 <__addsf3+0x1e>
 3f6:	e0 95       	com	r30
 3f8:	e7 fb       	bst	r30, 7
 3fa:	51 c1       	rjmp	.+674    	; 0x69e <__fp_inf>

000003fc <__addsf3x>:
 3fc:	e9 2f       	mov	r30, r25
 3fe:	77 d1       	rcall	.+750    	; 0x6ee <__fp_split3>
 400:	80 f3       	brcs	.-32     	; 0x3e2 <__addsf3+0x8>
 402:	ba 17       	cp	r27, r26
 404:	62 07       	cpc	r22, r18
 406:	73 07       	cpc	r23, r19
 408:	84 07       	cpc	r24, r20
 40a:	95 07       	cpc	r25, r21
 40c:	18 f0       	brcs	.+6      	; 0x414 <__addsf3x+0x18>
 40e:	71 f4       	brne	.+28     	; 0x42c <__addsf3x+0x30>
 410:	9e f5       	brtc	.+102    	; 0x478 <__addsf3x+0x7c>
 412:	8f c1       	rjmp	.+798    	; 0x732 <__fp_zero>
 414:	0e f4       	brtc	.+2      	; 0x418 <__addsf3x+0x1c>
 416:	e0 95       	com	r30
 418:	0b 2e       	mov	r0, r27
 41a:	ba 2f       	mov	r27, r26
 41c:	a0 2d       	mov	r26, r0
 41e:	0b 01       	movw	r0, r22
 420:	b9 01       	movw	r22, r18
 422:	90 01       	movw	r18, r0
 424:	0c 01       	movw	r0, r24
 426:	ca 01       	movw	r24, r20
 428:	a0 01       	movw	r20, r0
 42a:	11 24       	eor	r1, r1
 42c:	ff 27       	eor	r31, r31
 42e:	59 1b       	sub	r21, r25
 430:	99 f0       	breq	.+38     	; 0x458 <__addsf3x+0x5c>
 432:	59 3f       	cpi	r21, 0xF9	; 249
 434:	50 f4       	brcc	.+20     	; 0x44a <__addsf3x+0x4e>
 436:	50 3e       	cpi	r21, 0xE0	; 224
 438:	68 f1       	brcs	.+90     	; 0x494 <__addsf3x+0x98>
 43a:	1a 16       	cp	r1, r26
 43c:	f0 40       	sbci	r31, 0x00	; 0
 43e:	a2 2f       	mov	r26, r18
 440:	23 2f       	mov	r18, r19
 442:	34 2f       	mov	r19, r20
 444:	44 27       	eor	r20, r20
 446:	58 5f       	subi	r21, 0xF8	; 248
 448:	f3 cf       	rjmp	.-26     	; 0x430 <__addsf3x+0x34>
 44a:	46 95       	lsr	r20
 44c:	37 95       	ror	r19
 44e:	27 95       	ror	r18
 450:	a7 95       	ror	r26
 452:	f0 40       	sbci	r31, 0x00	; 0
 454:	53 95       	inc	r21
 456:	c9 f7       	brne	.-14     	; 0x44a <__addsf3x+0x4e>
 458:	7e f4       	brtc	.+30     	; 0x478 <__addsf3x+0x7c>
 45a:	1f 16       	cp	r1, r31
 45c:	ba 0b       	sbc	r27, r26
 45e:	62 0b       	sbc	r22, r18
 460:	73 0b       	sbc	r23, r19
 462:	84 0b       	sbc	r24, r20
 464:	ba f0       	brmi	.+46     	; 0x494 <__addsf3x+0x98>
 466:	91 50       	subi	r25, 0x01	; 1
 468:	a1 f0       	breq	.+40     	; 0x492 <__addsf3x+0x96>
 46a:	ff 0f       	add	r31, r31
 46c:	bb 1f       	adc	r27, r27
 46e:	66 1f       	adc	r22, r22
 470:	77 1f       	adc	r23, r23
 472:	88 1f       	adc	r24, r24
 474:	c2 f7       	brpl	.-16     	; 0x466 <__addsf3x+0x6a>
 476:	0e c0       	rjmp	.+28     	; 0x494 <__addsf3x+0x98>
 478:	ba 0f       	add	r27, r26
 47a:	62 1f       	adc	r22, r18
 47c:	73 1f       	adc	r23, r19
 47e:	84 1f       	adc	r24, r20
 480:	48 f4       	brcc	.+18     	; 0x494 <__addsf3x+0x98>
 482:	87 95       	ror	r24
 484:	77 95       	ror	r23
 486:	67 95       	ror	r22
 488:	b7 95       	ror	r27
 48a:	f7 95       	ror	r31
 48c:	9e 3f       	cpi	r25, 0xFE	; 254
 48e:	08 f0       	brcs	.+2      	; 0x492 <__addsf3x+0x96>
 490:	b3 cf       	rjmp	.-154    	; 0x3f8 <__addsf3+0x1e>
 492:	93 95       	inc	r25
 494:	88 0f       	add	r24, r24
 496:	08 f0       	brcs	.+2      	; 0x49a <__addsf3x+0x9e>
 498:	99 27       	eor	r25, r25
 49a:	ee 0f       	add	r30, r30
 49c:	97 95       	ror	r25
 49e:	87 95       	ror	r24
 4a0:	08 95       	ret

000004a2 <__cmpsf2>:
 4a2:	d9 d0       	rcall	.+434    	; 0x656 <__fp_cmp>
 4a4:	08 f4       	brcc	.+2      	; 0x4a8 <__cmpsf2+0x6>
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	08 95       	ret

000004aa <__divsf3>:
 4aa:	0c d0       	rcall	.+24     	; 0x4c4 <__divsf3x>
 4ac:	0f c1       	rjmp	.+542    	; 0x6cc <__fp_round>
 4ae:	07 d1       	rcall	.+526    	; 0x6be <__fp_pscB>
 4b0:	40 f0       	brcs	.+16     	; 0x4c2 <__divsf3+0x18>
 4b2:	fe d0       	rcall	.+508    	; 0x6b0 <__fp_pscA>
 4b4:	30 f0       	brcs	.+12     	; 0x4c2 <__divsf3+0x18>
 4b6:	21 f4       	brne	.+8      	; 0x4c0 <__divsf3+0x16>
 4b8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ba:	19 f0       	breq	.+6      	; 0x4c2 <__divsf3+0x18>
 4bc:	f0 c0       	rjmp	.+480    	; 0x69e <__fp_inf>
 4be:	51 11       	cpse	r21, r1
 4c0:	39 c1       	rjmp	.+626    	; 0x734 <__fp_szero>
 4c2:	f3 c0       	rjmp	.+486    	; 0x6aa <__fp_nan>

000004c4 <__divsf3x>:
 4c4:	14 d1       	rcall	.+552    	; 0x6ee <__fp_split3>
 4c6:	98 f3       	brcs	.-26     	; 0x4ae <__divsf3+0x4>

000004c8 <__divsf3_pse>:
 4c8:	99 23       	and	r25, r25
 4ca:	c9 f3       	breq	.-14     	; 0x4be <__divsf3+0x14>
 4cc:	55 23       	and	r21, r21
 4ce:	b1 f3       	breq	.-20     	; 0x4bc <__divsf3+0x12>
 4d0:	95 1b       	sub	r25, r21
 4d2:	55 0b       	sbc	r21, r21
 4d4:	bb 27       	eor	r27, r27
 4d6:	aa 27       	eor	r26, r26
 4d8:	62 17       	cp	r22, r18
 4da:	73 07       	cpc	r23, r19
 4dc:	84 07       	cpc	r24, r20
 4de:	38 f0       	brcs	.+14     	; 0x4ee <__divsf3_pse+0x26>
 4e0:	9f 5f       	subi	r25, 0xFF	; 255
 4e2:	5f 4f       	sbci	r21, 0xFF	; 255
 4e4:	22 0f       	add	r18, r18
 4e6:	33 1f       	adc	r19, r19
 4e8:	44 1f       	adc	r20, r20
 4ea:	aa 1f       	adc	r26, r26
 4ec:	a9 f3       	breq	.-22     	; 0x4d8 <__divsf3_pse+0x10>
 4ee:	33 d0       	rcall	.+102    	; 0x556 <__divsf3_pse+0x8e>
 4f0:	0e 2e       	mov	r0, r30
 4f2:	3a f0       	brmi	.+14     	; 0x502 <__divsf3_pse+0x3a>
 4f4:	e0 e8       	ldi	r30, 0x80	; 128
 4f6:	30 d0       	rcall	.+96     	; 0x558 <__divsf3_pse+0x90>
 4f8:	91 50       	subi	r25, 0x01	; 1
 4fa:	50 40       	sbci	r21, 0x00	; 0
 4fc:	e6 95       	lsr	r30
 4fe:	00 1c       	adc	r0, r0
 500:	ca f7       	brpl	.-14     	; 0x4f4 <__divsf3_pse+0x2c>
 502:	29 d0       	rcall	.+82     	; 0x556 <__divsf3_pse+0x8e>
 504:	fe 2f       	mov	r31, r30
 506:	27 d0       	rcall	.+78     	; 0x556 <__divsf3_pse+0x8e>
 508:	66 0f       	add	r22, r22
 50a:	77 1f       	adc	r23, r23
 50c:	88 1f       	adc	r24, r24
 50e:	bb 1f       	adc	r27, r27
 510:	26 17       	cp	r18, r22
 512:	37 07       	cpc	r19, r23
 514:	48 07       	cpc	r20, r24
 516:	ab 07       	cpc	r26, r27
 518:	b0 e8       	ldi	r27, 0x80	; 128
 51a:	09 f0       	breq	.+2      	; 0x51e <__divsf3_pse+0x56>
 51c:	bb 0b       	sbc	r27, r27
 51e:	80 2d       	mov	r24, r0
 520:	bf 01       	movw	r22, r30
 522:	ff 27       	eor	r31, r31
 524:	93 58       	subi	r25, 0x83	; 131
 526:	5f 4f       	sbci	r21, 0xFF	; 255
 528:	2a f0       	brmi	.+10     	; 0x534 <__divsf3_pse+0x6c>
 52a:	9e 3f       	cpi	r25, 0xFE	; 254
 52c:	51 05       	cpc	r21, r1
 52e:	68 f0       	brcs	.+26     	; 0x54a <__divsf3_pse+0x82>
 530:	b6 c0       	rjmp	.+364    	; 0x69e <__fp_inf>
 532:	00 c1       	rjmp	.+512    	; 0x734 <__fp_szero>
 534:	5f 3f       	cpi	r21, 0xFF	; 255
 536:	ec f3       	brlt	.-6      	; 0x532 <__divsf3_pse+0x6a>
 538:	98 3e       	cpi	r25, 0xE8	; 232
 53a:	dc f3       	brlt	.-10     	; 0x532 <__divsf3_pse+0x6a>
 53c:	86 95       	lsr	r24
 53e:	77 95       	ror	r23
 540:	67 95       	ror	r22
 542:	b7 95       	ror	r27
 544:	f7 95       	ror	r31
 546:	9f 5f       	subi	r25, 0xFF	; 255
 548:	c9 f7       	brne	.-14     	; 0x53c <__divsf3_pse+0x74>
 54a:	88 0f       	add	r24, r24
 54c:	91 1d       	adc	r25, r1
 54e:	96 95       	lsr	r25
 550:	87 95       	ror	r24
 552:	97 f9       	bld	r25, 7
 554:	08 95       	ret
 556:	e1 e0       	ldi	r30, 0x01	; 1
 558:	66 0f       	add	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	88 1f       	adc	r24, r24
 55e:	bb 1f       	adc	r27, r27
 560:	62 17       	cp	r22, r18
 562:	73 07       	cpc	r23, r19
 564:	84 07       	cpc	r24, r20
 566:	ba 07       	cpc	r27, r26
 568:	20 f0       	brcs	.+8      	; 0x572 <__divsf3_pse+0xaa>
 56a:	62 1b       	sub	r22, r18
 56c:	73 0b       	sbc	r23, r19
 56e:	84 0b       	sbc	r24, r20
 570:	ba 0b       	sbc	r27, r26
 572:	ee 1f       	adc	r30, r30
 574:	88 f7       	brcc	.-30     	; 0x558 <__divsf3_pse+0x90>
 576:	e0 95       	com	r30
 578:	08 95       	ret

0000057a <__fixsfsi>:
 57a:	04 d0       	rcall	.+8      	; 0x584 <__fixunssfsi>
 57c:	68 94       	set
 57e:	b1 11       	cpse	r27, r1
 580:	d9 c0       	rjmp	.+434    	; 0x734 <__fp_szero>
 582:	08 95       	ret

00000584 <__fixunssfsi>:
 584:	bc d0       	rcall	.+376    	; 0x6fe <__fp_splitA>
 586:	88 f0       	brcs	.+34     	; 0x5aa <__fixunssfsi+0x26>
 588:	9f 57       	subi	r25, 0x7F	; 127
 58a:	90 f0       	brcs	.+36     	; 0x5b0 <__fixunssfsi+0x2c>
 58c:	b9 2f       	mov	r27, r25
 58e:	99 27       	eor	r25, r25
 590:	b7 51       	subi	r27, 0x17	; 23
 592:	a0 f0       	brcs	.+40     	; 0x5bc <__fixunssfsi+0x38>
 594:	d1 f0       	breq	.+52     	; 0x5ca <__fixunssfsi+0x46>
 596:	66 0f       	add	r22, r22
 598:	77 1f       	adc	r23, r23
 59a:	88 1f       	adc	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	1a f0       	brmi	.+6      	; 0x5a6 <__fixunssfsi+0x22>
 5a0:	ba 95       	dec	r27
 5a2:	c9 f7       	brne	.-14     	; 0x596 <__fixunssfsi+0x12>
 5a4:	12 c0       	rjmp	.+36     	; 0x5ca <__fixunssfsi+0x46>
 5a6:	b1 30       	cpi	r27, 0x01	; 1
 5a8:	81 f0       	breq	.+32     	; 0x5ca <__fixunssfsi+0x46>
 5aa:	c3 d0       	rcall	.+390    	; 0x732 <__fp_zero>
 5ac:	b1 e0       	ldi	r27, 0x01	; 1
 5ae:	08 95       	ret
 5b0:	c0 c0       	rjmp	.+384    	; 0x732 <__fp_zero>
 5b2:	67 2f       	mov	r22, r23
 5b4:	78 2f       	mov	r23, r24
 5b6:	88 27       	eor	r24, r24
 5b8:	b8 5f       	subi	r27, 0xF8	; 248
 5ba:	39 f0       	breq	.+14     	; 0x5ca <__fixunssfsi+0x46>
 5bc:	b9 3f       	cpi	r27, 0xF9	; 249
 5be:	cc f3       	brlt	.-14     	; 0x5b2 <__fixunssfsi+0x2e>
 5c0:	86 95       	lsr	r24
 5c2:	77 95       	ror	r23
 5c4:	67 95       	ror	r22
 5c6:	b3 95       	inc	r27
 5c8:	d9 f7       	brne	.-10     	; 0x5c0 <__fixunssfsi+0x3c>
 5ca:	3e f4       	brtc	.+14     	; 0x5da <__fixunssfsi+0x56>
 5cc:	90 95       	com	r25
 5ce:	80 95       	com	r24
 5d0:	70 95       	com	r23
 5d2:	61 95       	neg	r22
 5d4:	7f 4f       	sbci	r23, 0xFF	; 255
 5d6:	8f 4f       	sbci	r24, 0xFF	; 255
 5d8:	9f 4f       	sbci	r25, 0xFF	; 255
 5da:	08 95       	ret

000005dc <__floatunsisf>:
 5dc:	e8 94       	clt
 5de:	09 c0       	rjmp	.+18     	; 0x5f2 <__floatsisf+0x12>

000005e0 <__floatsisf>:
 5e0:	97 fb       	bst	r25, 7
 5e2:	3e f4       	brtc	.+14     	; 0x5f2 <__floatsisf+0x12>
 5e4:	90 95       	com	r25
 5e6:	80 95       	com	r24
 5e8:	70 95       	com	r23
 5ea:	61 95       	neg	r22
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255
 5ee:	8f 4f       	sbci	r24, 0xFF	; 255
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	99 23       	and	r25, r25
 5f4:	a9 f0       	breq	.+42     	; 0x620 <__floatsisf+0x40>
 5f6:	f9 2f       	mov	r31, r25
 5f8:	96 e9       	ldi	r25, 0x96	; 150
 5fa:	bb 27       	eor	r27, r27
 5fc:	93 95       	inc	r25
 5fe:	f6 95       	lsr	r31
 600:	87 95       	ror	r24
 602:	77 95       	ror	r23
 604:	67 95       	ror	r22
 606:	b7 95       	ror	r27
 608:	f1 11       	cpse	r31, r1
 60a:	f8 cf       	rjmp	.-16     	; 0x5fc <__floatsisf+0x1c>
 60c:	fa f4       	brpl	.+62     	; 0x64c <__floatsisf+0x6c>
 60e:	bb 0f       	add	r27, r27
 610:	11 f4       	brne	.+4      	; 0x616 <__floatsisf+0x36>
 612:	60 ff       	sbrs	r22, 0
 614:	1b c0       	rjmp	.+54     	; 0x64c <__floatsisf+0x6c>
 616:	6f 5f       	subi	r22, 0xFF	; 255
 618:	7f 4f       	sbci	r23, 0xFF	; 255
 61a:	8f 4f       	sbci	r24, 0xFF	; 255
 61c:	9f 4f       	sbci	r25, 0xFF	; 255
 61e:	16 c0       	rjmp	.+44     	; 0x64c <__floatsisf+0x6c>
 620:	88 23       	and	r24, r24
 622:	11 f0       	breq	.+4      	; 0x628 <__floatsisf+0x48>
 624:	96 e9       	ldi	r25, 0x96	; 150
 626:	11 c0       	rjmp	.+34     	; 0x64a <__floatsisf+0x6a>
 628:	77 23       	and	r23, r23
 62a:	21 f0       	breq	.+8      	; 0x634 <__floatsisf+0x54>
 62c:	9e e8       	ldi	r25, 0x8E	; 142
 62e:	87 2f       	mov	r24, r23
 630:	76 2f       	mov	r23, r22
 632:	05 c0       	rjmp	.+10     	; 0x63e <__floatsisf+0x5e>
 634:	66 23       	and	r22, r22
 636:	71 f0       	breq	.+28     	; 0x654 <__floatsisf+0x74>
 638:	96 e8       	ldi	r25, 0x86	; 134
 63a:	86 2f       	mov	r24, r22
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	60 e0       	ldi	r22, 0x00	; 0
 640:	2a f0       	brmi	.+10     	; 0x64c <__floatsisf+0x6c>
 642:	9a 95       	dec	r25
 644:	66 0f       	add	r22, r22
 646:	77 1f       	adc	r23, r23
 648:	88 1f       	adc	r24, r24
 64a:	da f7       	brpl	.-10     	; 0x642 <__floatsisf+0x62>
 64c:	88 0f       	add	r24, r24
 64e:	96 95       	lsr	r25
 650:	87 95       	ror	r24
 652:	97 f9       	bld	r25, 7
 654:	08 95       	ret

00000656 <__fp_cmp>:
 656:	99 0f       	add	r25, r25
 658:	00 08       	sbc	r0, r0
 65a:	55 0f       	add	r21, r21
 65c:	aa 0b       	sbc	r26, r26
 65e:	e0 e8       	ldi	r30, 0x80	; 128
 660:	fe ef       	ldi	r31, 0xFE	; 254
 662:	16 16       	cp	r1, r22
 664:	17 06       	cpc	r1, r23
 666:	e8 07       	cpc	r30, r24
 668:	f9 07       	cpc	r31, r25
 66a:	c0 f0       	brcs	.+48     	; 0x69c <__fp_cmp+0x46>
 66c:	12 16       	cp	r1, r18
 66e:	13 06       	cpc	r1, r19
 670:	e4 07       	cpc	r30, r20
 672:	f5 07       	cpc	r31, r21
 674:	98 f0       	brcs	.+38     	; 0x69c <__fp_cmp+0x46>
 676:	62 1b       	sub	r22, r18
 678:	73 0b       	sbc	r23, r19
 67a:	84 0b       	sbc	r24, r20
 67c:	95 0b       	sbc	r25, r21
 67e:	39 f4       	brne	.+14     	; 0x68e <__fp_cmp+0x38>
 680:	0a 26       	eor	r0, r26
 682:	61 f0       	breq	.+24     	; 0x69c <__fp_cmp+0x46>
 684:	23 2b       	or	r18, r19
 686:	24 2b       	or	r18, r20
 688:	25 2b       	or	r18, r21
 68a:	21 f4       	brne	.+8      	; 0x694 <__fp_cmp+0x3e>
 68c:	08 95       	ret
 68e:	0a 26       	eor	r0, r26
 690:	09 f4       	brne	.+2      	; 0x694 <__fp_cmp+0x3e>
 692:	a1 40       	sbci	r26, 0x01	; 1
 694:	a6 95       	lsr	r26
 696:	8f ef       	ldi	r24, 0xFF	; 255
 698:	81 1d       	adc	r24, r1
 69a:	81 1d       	adc	r24, r1
 69c:	08 95       	ret

0000069e <__fp_inf>:
 69e:	97 f9       	bld	r25, 7
 6a0:	9f 67       	ori	r25, 0x7F	; 127
 6a2:	80 e8       	ldi	r24, 0x80	; 128
 6a4:	70 e0       	ldi	r23, 0x00	; 0
 6a6:	60 e0       	ldi	r22, 0x00	; 0
 6a8:	08 95       	ret

000006aa <__fp_nan>:
 6aa:	9f ef       	ldi	r25, 0xFF	; 255
 6ac:	80 ec       	ldi	r24, 0xC0	; 192
 6ae:	08 95       	ret

000006b0 <__fp_pscA>:
 6b0:	00 24       	eor	r0, r0
 6b2:	0a 94       	dec	r0
 6b4:	16 16       	cp	r1, r22
 6b6:	17 06       	cpc	r1, r23
 6b8:	18 06       	cpc	r1, r24
 6ba:	09 06       	cpc	r0, r25
 6bc:	08 95       	ret

000006be <__fp_pscB>:
 6be:	00 24       	eor	r0, r0
 6c0:	0a 94       	dec	r0
 6c2:	12 16       	cp	r1, r18
 6c4:	13 06       	cpc	r1, r19
 6c6:	14 06       	cpc	r1, r20
 6c8:	05 06       	cpc	r0, r21
 6ca:	08 95       	ret

000006cc <__fp_round>:
 6cc:	09 2e       	mov	r0, r25
 6ce:	03 94       	inc	r0
 6d0:	00 0c       	add	r0, r0
 6d2:	11 f4       	brne	.+4      	; 0x6d8 <__fp_round+0xc>
 6d4:	88 23       	and	r24, r24
 6d6:	52 f0       	brmi	.+20     	; 0x6ec <__fp_round+0x20>
 6d8:	bb 0f       	add	r27, r27
 6da:	40 f4       	brcc	.+16     	; 0x6ec <__fp_round+0x20>
 6dc:	bf 2b       	or	r27, r31
 6de:	11 f4       	brne	.+4      	; 0x6e4 <__fp_round+0x18>
 6e0:	60 ff       	sbrs	r22, 0
 6e2:	04 c0       	rjmp	.+8      	; 0x6ec <__fp_round+0x20>
 6e4:	6f 5f       	subi	r22, 0xFF	; 255
 6e6:	7f 4f       	sbci	r23, 0xFF	; 255
 6e8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ea:	9f 4f       	sbci	r25, 0xFF	; 255
 6ec:	08 95       	ret

000006ee <__fp_split3>:
 6ee:	57 fd       	sbrc	r21, 7
 6f0:	90 58       	subi	r25, 0x80	; 128
 6f2:	44 0f       	add	r20, r20
 6f4:	55 1f       	adc	r21, r21
 6f6:	59 f0       	breq	.+22     	; 0x70e <__fp_splitA+0x10>
 6f8:	5f 3f       	cpi	r21, 0xFF	; 255
 6fa:	71 f0       	breq	.+28     	; 0x718 <__fp_splitA+0x1a>
 6fc:	47 95       	ror	r20

000006fe <__fp_splitA>:
 6fe:	88 0f       	add	r24, r24
 700:	97 fb       	bst	r25, 7
 702:	99 1f       	adc	r25, r25
 704:	61 f0       	breq	.+24     	; 0x71e <__fp_splitA+0x20>
 706:	9f 3f       	cpi	r25, 0xFF	; 255
 708:	79 f0       	breq	.+30     	; 0x728 <__fp_splitA+0x2a>
 70a:	87 95       	ror	r24
 70c:	08 95       	ret
 70e:	12 16       	cp	r1, r18
 710:	13 06       	cpc	r1, r19
 712:	14 06       	cpc	r1, r20
 714:	55 1f       	adc	r21, r21
 716:	f2 cf       	rjmp	.-28     	; 0x6fc <__fp_split3+0xe>
 718:	46 95       	lsr	r20
 71a:	f1 df       	rcall	.-30     	; 0x6fe <__fp_splitA>
 71c:	08 c0       	rjmp	.+16     	; 0x72e <__fp_splitA+0x30>
 71e:	16 16       	cp	r1, r22
 720:	17 06       	cpc	r1, r23
 722:	18 06       	cpc	r1, r24
 724:	99 1f       	adc	r25, r25
 726:	f1 cf       	rjmp	.-30     	; 0x70a <__fp_splitA+0xc>
 728:	86 95       	lsr	r24
 72a:	71 05       	cpc	r23, r1
 72c:	61 05       	cpc	r22, r1
 72e:	08 94       	sec
 730:	08 95       	ret

00000732 <__fp_zero>:
 732:	e8 94       	clt

00000734 <__fp_szero>:
 734:	bb 27       	eor	r27, r27
 736:	66 27       	eor	r22, r22
 738:	77 27       	eor	r23, r23
 73a:	cb 01       	movw	r24, r22
 73c:	97 f9       	bld	r25, 7
 73e:	08 95       	ret

00000740 <__gesf2>:
 740:	8a df       	rcall	.-236    	; 0x656 <__fp_cmp>
 742:	08 f4       	brcc	.+2      	; 0x746 <__gesf2+0x6>
 744:	8f ef       	ldi	r24, 0xFF	; 255
 746:	08 95       	ret

00000748 <__mulsf3>:
 748:	0b d0       	rcall	.+22     	; 0x760 <__mulsf3x>
 74a:	c0 cf       	rjmp	.-128    	; 0x6cc <__fp_round>
 74c:	b1 df       	rcall	.-158    	; 0x6b0 <__fp_pscA>
 74e:	28 f0       	brcs	.+10     	; 0x75a <__mulsf3+0x12>
 750:	b6 df       	rcall	.-148    	; 0x6be <__fp_pscB>
 752:	18 f0       	brcs	.+6      	; 0x75a <__mulsf3+0x12>
 754:	95 23       	and	r25, r21
 756:	09 f0       	breq	.+2      	; 0x75a <__mulsf3+0x12>
 758:	a2 cf       	rjmp	.-188    	; 0x69e <__fp_inf>
 75a:	a7 cf       	rjmp	.-178    	; 0x6aa <__fp_nan>
 75c:	11 24       	eor	r1, r1
 75e:	ea cf       	rjmp	.-44     	; 0x734 <__fp_szero>

00000760 <__mulsf3x>:
 760:	c6 df       	rcall	.-116    	; 0x6ee <__fp_split3>
 762:	a0 f3       	brcs	.-24     	; 0x74c <__mulsf3+0x4>

00000764 <__mulsf3_pse>:
 764:	95 9f       	mul	r25, r21
 766:	d1 f3       	breq	.-12     	; 0x75c <__mulsf3+0x14>
 768:	95 0f       	add	r25, r21
 76a:	50 e0       	ldi	r21, 0x00	; 0
 76c:	55 1f       	adc	r21, r21
 76e:	62 9f       	mul	r22, r18
 770:	f0 01       	movw	r30, r0
 772:	72 9f       	mul	r23, r18
 774:	bb 27       	eor	r27, r27
 776:	f0 0d       	add	r31, r0
 778:	b1 1d       	adc	r27, r1
 77a:	63 9f       	mul	r22, r19
 77c:	aa 27       	eor	r26, r26
 77e:	f0 0d       	add	r31, r0
 780:	b1 1d       	adc	r27, r1
 782:	aa 1f       	adc	r26, r26
 784:	64 9f       	mul	r22, r20
 786:	66 27       	eor	r22, r22
 788:	b0 0d       	add	r27, r0
 78a:	a1 1d       	adc	r26, r1
 78c:	66 1f       	adc	r22, r22
 78e:	82 9f       	mul	r24, r18
 790:	22 27       	eor	r18, r18
 792:	b0 0d       	add	r27, r0
 794:	a1 1d       	adc	r26, r1
 796:	62 1f       	adc	r22, r18
 798:	73 9f       	mul	r23, r19
 79a:	b0 0d       	add	r27, r0
 79c:	a1 1d       	adc	r26, r1
 79e:	62 1f       	adc	r22, r18
 7a0:	83 9f       	mul	r24, r19
 7a2:	a0 0d       	add	r26, r0
 7a4:	61 1d       	adc	r22, r1
 7a6:	22 1f       	adc	r18, r18
 7a8:	74 9f       	mul	r23, r20
 7aa:	33 27       	eor	r19, r19
 7ac:	a0 0d       	add	r26, r0
 7ae:	61 1d       	adc	r22, r1
 7b0:	23 1f       	adc	r18, r19
 7b2:	84 9f       	mul	r24, r20
 7b4:	60 0d       	add	r22, r0
 7b6:	21 1d       	adc	r18, r1
 7b8:	82 2f       	mov	r24, r18
 7ba:	76 2f       	mov	r23, r22
 7bc:	6a 2f       	mov	r22, r26
 7be:	11 24       	eor	r1, r1
 7c0:	9f 57       	subi	r25, 0x7F	; 127
 7c2:	50 40       	sbci	r21, 0x00	; 0
 7c4:	8a f0       	brmi	.+34     	; 0x7e8 <__mulsf3_pse+0x84>
 7c6:	e1 f0       	breq	.+56     	; 0x800 <__mulsf3_pse+0x9c>
 7c8:	88 23       	and	r24, r24
 7ca:	4a f0       	brmi	.+18     	; 0x7de <__mulsf3_pse+0x7a>
 7cc:	ee 0f       	add	r30, r30
 7ce:	ff 1f       	adc	r31, r31
 7d0:	bb 1f       	adc	r27, r27
 7d2:	66 1f       	adc	r22, r22
 7d4:	77 1f       	adc	r23, r23
 7d6:	88 1f       	adc	r24, r24
 7d8:	91 50       	subi	r25, 0x01	; 1
 7da:	50 40       	sbci	r21, 0x00	; 0
 7dc:	a9 f7       	brne	.-22     	; 0x7c8 <__mulsf3_pse+0x64>
 7de:	9e 3f       	cpi	r25, 0xFE	; 254
 7e0:	51 05       	cpc	r21, r1
 7e2:	70 f0       	brcs	.+28     	; 0x800 <__mulsf3_pse+0x9c>
 7e4:	5c cf       	rjmp	.-328    	; 0x69e <__fp_inf>
 7e6:	a6 cf       	rjmp	.-180    	; 0x734 <__fp_szero>
 7e8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ea:	ec f3       	brlt	.-6      	; 0x7e6 <__mulsf3_pse+0x82>
 7ec:	98 3e       	cpi	r25, 0xE8	; 232
 7ee:	dc f3       	brlt	.-10     	; 0x7e6 <__mulsf3_pse+0x82>
 7f0:	86 95       	lsr	r24
 7f2:	77 95       	ror	r23
 7f4:	67 95       	ror	r22
 7f6:	b7 95       	ror	r27
 7f8:	f7 95       	ror	r31
 7fa:	e7 95       	ror	r30
 7fc:	9f 5f       	subi	r25, 0xFF	; 255
 7fe:	c1 f7       	brne	.-16     	; 0x7f0 <__mulsf3_pse+0x8c>
 800:	fe 2b       	or	r31, r30
 802:	88 0f       	add	r24, r24
 804:	91 1d       	adc	r25, r1
 806:	96 95       	lsr	r25
 808:	87 95       	ror	r24
 80a:	97 f9       	bld	r25, 7
 80c:	08 95       	ret

0000080e <_exit>:
 80e:	f8 94       	cli

00000810 <__stop_program>:
 810:	ff cf       	rjmp	.-2      	; 0x810 <__stop_program>
