
motorkontroll.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000000da  0000014e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00001a7c  00000000  00000000  00000150  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006f4  00000000  00000000  00001bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000022c0  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000022ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000012e  00000000  00000000  0000231f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000ca  00000000  00000000  0000244d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000163  00000000  00000000  00002517  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000050  00000000  00000000  0000267c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000f3  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000007b  00000000  00000000  000027bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000283a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	1d c0       	rjmp	.+58     	; 0xd6 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
}

int main(void)
{
	//TIMSK1 = (1 << OCIE1B | 1 << OCIE1A); // Enable timer interrupts 
	DDRD |= 0b00011000;
  9e:	8a b1       	in	r24, 0x0a	; 10
  a0:	88 61       	ori	r24, 0x18	; 24
  a2:	8a b9       	out	0x0a, r24	; 10
	//PORTD |= 0b00011000;
	OCR1A = 0x1000;
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	90 e1       	ldi	r25, 0x10	; 16
  a8:	90 93 89 00 	sts	0x0089, r25
  ac:	80 93 88 00 	sts	0x0088, r24
	ICR1H = 0x3E;
  b0:	8e e3       	ldi	r24, 0x3E	; 62
  b2:	80 93 87 00 	sts	0x0087, r24
	ICR1L = 0x7F;
  b6:	8f e7       	ldi	r24, 0x7F	; 127
  b8:	80 93 86 00 	sts	0x0086, r24
	TCCR1B = 0b00011001;// 0x19; //set to fast pwm
  bc:	89 e1       	ldi	r24, 0x19	; 25
  be:	80 93 81 00 	sts	0x0081, r24
	TCCR1A = 0b10100010; // xA2; //COMA = 10, COMB = 10 -> PD4 & PD5 outports
  c2:	82 ea       	ldi	r24, 0xA2	; 162
  c4:	80 93 80 00 	sts	0x0080, r24
	//sei();
	//drive_left_wheels(60);

	while(1)
    {
		OCR1A = 0x1000;
  c8:	e8 e8       	ldi	r30, 0x88	; 136
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	90 e1       	ldi	r25, 0x10	; 16
  d0:	91 83       	std	Z+1, r25	; 0x01
  d2:	80 83       	st	Z, r24
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <main+0x32>

000000d6 <_exit>:
  d6:	f8 94       	cli

000000d8 <__stop_program>:
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <__stop_program>
